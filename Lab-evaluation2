{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNJc5Raxscg4quL8xy2IDlL"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"Q_cXi6uPXtfb","executionInfo":{"status":"ok","timestamp":1692894688372,"user_tz":420,"elapsed":1333,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["import warnings\n","warnings.filterwarnings(\"ignore\")"],"metadata":{"id":"jm8jEmDVX7gk","executionInfo":{"status":"ok","timestamp":1692894690546,"user_tz":420,"elapsed":650,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('../content/cars.csv')"],"metadata":{"id":"WCfB-eLtX-LD","executionInfo":{"status":"ok","timestamp":1692894713456,"user_tz":420,"elapsed":4,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"162DZzQMX87A","executionInfo":{"status":"ok","timestamp":1692894718298,"user_tz":420,"elapsed":575,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"0b50c9c0-e75b-43b0-82dd-7d905560cf8b"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     brand  km_driven    fuel         owner  selling_price\n","0   Maruti     145500  Diesel   First Owner         450000\n","1    Skoda     120000  Diesel  Second Owner         370000\n","2    Honda     140000  Petrol   Third Owner         158000\n","3  Hyundai     127000  Diesel   First Owner         225000\n","4   Maruti     120000  Petrol   First Owner         130000"],"text/html":["\n","  <div id=\"df-2016b077-1200-40ec-9f77-34ade0a93def\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>brand</th>\n","      <th>km_driven</th>\n","      <th>fuel</th>\n","      <th>owner</th>\n","      <th>selling_price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Maruti</td>\n","      <td>145500</td>\n","      <td>Diesel</td>\n","      <td>First Owner</td>\n","      <td>450000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Skoda</td>\n","      <td>120000</td>\n","      <td>Diesel</td>\n","      <td>Second Owner</td>\n","      <td>370000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Honda</td>\n","      <td>140000</td>\n","      <td>Petrol</td>\n","      <td>Third Owner</td>\n","      <td>158000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Hyundai</td>\n","      <td>127000</td>\n","      <td>Diesel</td>\n","      <td>First Owner</td>\n","      <td>225000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Maruti</td>\n","      <td>120000</td>\n","      <td>Petrol</td>\n","      <td>First Owner</td>\n","      <td>130000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2016b077-1200-40ec-9f77-34ade0a93def')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2016b077-1200-40ec-9f77-34ade0a93def button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2016b077-1200-40ec-9f77-34ade0a93def');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d01577cf-dfd6-4437-92d1-1407b209be73\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d01577cf-dfd6-4437-92d1-1407b209be73')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d01577cf-dfd6-4437-92d1-1407b209be73 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XZyWKtnHYDYp","executionInfo":{"status":"ok","timestamp":1692894719129,"user_tz":420,"elapsed":5,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"8dc1cb41-4ec3-4b04-8367-c46ddc4a902a"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(8128, 5)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I15_84cOYFn5","executionInfo":{"status":"ok","timestamp":1692894721357,"user_tz":420,"elapsed":574,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"948e07cd-6e05-4c4a-819e-b344c84e2265"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["brand            0\n","km_driven        0\n","fuel             0\n","owner            0\n","selling_price    0\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df[['brand', 'fuel', 'owner']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Zteoef1gYHoh","executionInfo":{"status":"ok","timestamp":1692894724184,"user_tz":420,"elapsed":906,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"9f88177d-8819-47e6-b381-f830b0121057"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        brand    fuel                 owner\n","0      Maruti  Diesel           First Owner\n","1       Skoda  Diesel          Second Owner\n","2       Honda  Petrol           Third Owner\n","3     Hyundai  Diesel           First Owner\n","4      Maruti  Petrol           First Owner\n","...       ...     ...                   ...\n","8123  Hyundai  Petrol           First Owner\n","8124  Hyundai  Diesel  Fourth & Above Owner\n","8125   Maruti  Diesel           First Owner\n","8126     Tata  Diesel           First Owner\n","8127     Tata  Diesel           First Owner\n","\n","[8128 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-ccdf3827-245f-412a-8c77-d2f73b1d15a3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>brand</th>\n","      <th>fuel</th>\n","      <th>owner</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Maruti</td>\n","      <td>Diesel</td>\n","      <td>First Owner</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Skoda</td>\n","      <td>Diesel</td>\n","      <td>Second Owner</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Honda</td>\n","      <td>Petrol</td>\n","      <td>Third Owner</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Hyundai</td>\n","      <td>Diesel</td>\n","      <td>First Owner</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Maruti</td>\n","      <td>Petrol</td>\n","      <td>First Owner</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8123</th>\n","      <td>Hyundai</td>\n","      <td>Petrol</td>\n","      <td>First Owner</td>\n","    </tr>\n","    <tr>\n","      <th>8124</th>\n","      <td>Hyundai</td>\n","      <td>Diesel</td>\n","      <td>Fourth &amp; Above Owner</td>\n","    </tr>\n","    <tr>\n","      <th>8125</th>\n","      <td>Maruti</td>\n","      <td>Diesel</td>\n","      <td>First Owner</td>\n","    </tr>\n","    <tr>\n","      <th>8126</th>\n","      <td>Tata</td>\n","      <td>Diesel</td>\n","      <td>First Owner</td>\n","    </tr>\n","    <tr>\n","      <th>8127</th>\n","      <td>Tata</td>\n","      <td>Diesel</td>\n","      <td>First Owner</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8128 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ccdf3827-245f-412a-8c77-d2f73b1d15a3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ccdf3827-245f-412a-8c77-d2f73b1d15a3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ccdf3827-245f-412a-8c77-d2f73b1d15a3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-12ac97ca-fc91-431a-8821-992b3c3c6de6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-12ac97ca-fc91-431a-8821-992b3c3c6de6')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-12ac97ca-fc91-431a-8821-992b3c3c6de6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["X = df.drop(columns=['selling_price'])\n","y = df.iloc[:,-1]"],"metadata":{"id":"0w0ZzysfYJ6C","executionInfo":{"status":"ok","timestamp":1692894856915,"user_tz":420,"elapsed":775,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=42)"],"metadata":{"id":"RD70Db-vYMI2","executionInfo":{"status":"ok","timestamp":1692894859989,"user_tz":420,"elapsed":438,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["\n","for col in X_train.columns:\n","    plt.figure(figsize=(14,4))\n","    plt.subplot(121)\n","    sns.distplot(X_train[col])\n","    plt.title(col)\n","\n","    plt.subplot(122)\n","    stats.probplot(X_train[col], dist=\"norm\", plot=plt)\n","    plt.title(col)\n","\n","    plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":532},"id":"3EhEF6sdYOpF","executionInfo":{"status":"error","timestamp":1692894868123,"user_tz":420,"elapsed":909,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"b59361cf-1aeb-47ca-8d47-dd9fe2dad220"},"execution_count":30,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-30-672c00931c94>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m122\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m     \u001b[0mstats\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprobplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdist\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"norm\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mplot\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mplt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'stats' is not defined"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df['fuel'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ew7suNwBYRJB","executionInfo":{"status":"ok","timestamp":1692894761950,"user_tz":420,"elapsed":962,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"f8d6a239-755e-4839-b267-7e56e7c245a0"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Diesel', 'Petrol', 'LPG', 'CNG'], dtype=object)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df['owner'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pg1dsBfbYTnA","executionInfo":{"status":"ok","timestamp":1692894765012,"user_tz":420,"elapsed":727,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"a71f5853-612a-4944-e71e-e0266c793dc7"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['First Owner', 'Second Owner', 'Third Owner',\n","       'Fourth & Above Owner', 'Test Drive Car'], dtype=object)"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df['brand'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"daXtAVp2YVgV","executionInfo":{"status":"ok","timestamp":1692894767830,"user_tz":420,"elapsed":466,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"a251e3a3-b401-4b4c-aa88-09fda83d5a66"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Maruti', 'Skoda', 'Honda', 'Hyundai', 'Toyota', 'Ford', 'Renault',\n","       'Mahindra', 'Tata', 'Chevrolet', 'Fiat', 'Datsun', 'Jeep',\n","       'Mercedes-Benz', 'Mitsubishi', 'Audi', 'Volkswagen', 'BMW',\n","       'Nissan', 'Lexus', 'Jaguar', 'Land', 'MG', 'Volvo', 'Daewoo',\n","       'Kia', 'Force', 'Ambassador', 'Ashok', 'Isuzu', 'Opel', 'Peugeot'],\n","      dtype=object)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["from sklearn.preprocessing import OrdinalEncoder\n","oe = OrdinalEncoder(\n","    categories=[['Maruti', 'Skoda', 'Honda', 'Hyundai', 'Toyota', 'Ford', 'Renault',\n","                 'Mahindra', 'Tata', 'Chevrolet', 'Fiat', 'Datsun', 'Jeep',\n","                 'Mercedes-Benz', 'Mitsubishi', 'Audi', 'Volkswagen', 'BMW',\n","                 'Nissan', 'Lexus', 'Jaguar', 'Land', 'MG', 'Volvo', 'Daewoo',\n","                 'Kia', 'Force', 'Ambassador', 'Ashok', 'Isuzu', 'Opel', 'Peugeot'], ['Diesel', 'Petrol', 'LPG', 'CNG'], ['First Owner', 'Second Owner', 'Third Owner', 'Fourth & Above Owner', 'Test Drive Car']])\n","df[['brand', 'fuel', 'owner']] = oe.fit_transform(\n","    df[['brand', 'fuel', 'owner']])"],"metadata":{"id":"1IRJcH1IYXwR","executionInfo":{"status":"ok","timestamp":1692894771541,"user_tz":420,"elapsed":485,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["oe.categories_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EPj5OpF7YaEv","executionInfo":{"status":"ok","timestamp":1692894774527,"user_tz":420,"elapsed":702,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"0025faf4-932a-4709-b910-d87b4a6c79d6"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[array(['Maruti', 'Skoda', 'Honda', 'Hyundai', 'Toyota', 'Ford', 'Renault',\n","        'Mahindra', 'Tata', 'Chevrolet', 'Fiat', 'Datsun', 'Jeep',\n","        'Mercedes-Benz', 'Mitsubishi', 'Audi', 'Volkswagen', 'BMW',\n","        'Nissan', 'Lexus', 'Jaguar', 'Land', 'MG', 'Volvo', 'Daewoo',\n","        'Kia', 'Force', 'Ambassador', 'Ashok', 'Isuzu', 'Opel', 'Peugeot'],\n","       dtype=object),\n"," array(['Diesel', 'Petrol', 'LPG', 'CNG'], dtype=object),\n"," array(['First Owner', 'Second Owner', 'Third Owner',\n","        'Fourth & Above Owner', 'Test Drive Car'], dtype=object)]"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["sns.boxplot(data=df, x=\"km_driven\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"CLQBhxwNYcZ-","executionInfo":{"status":"ok","timestamp":1692894778278,"user_tz":420,"elapsed":1092,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"afa6f5e3-fc01-4b0a-923a-14f3a8615a8e"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='km_driven'>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["print(\"Std value of cgpa\", df['km_driven'].std())\n","print(\"Min value of cgpa\", df['km_driven'].min())\n","print(\"Max value of cgpa\", df['km_driven'].max())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oN2JlmMdYfO4","executionInfo":{"status":"ok","timestamp":1692894782094,"user_tz":420,"elapsed":579,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"dc51c380-396e-41b8-d7f3-72f8a17fb3ed"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Std value of cgpa 56550.554958219196\n","Min value of cgpa 1\n","Max value of cgpa 2360457\n"]}]},{"cell_type":"code","source":["upper_limit = df['km_driven'].mean() + 3*df['km_driven'].std()\n","lower_limit = df['km_driven'].mean() - 3*df['km_driven'].std()"],"metadata":{"id":"8tASjnJqYhs7","executionInfo":{"status":"ok","timestamp":1692894784561,"user_tz":420,"elapsed":527,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["outlier = df[(df['km_driven'] > upper_limit) | (df['km_driven'] < lower_limit)]\n","new_df = df[(df['km_driven'] < upper_limit) & (df['km_driven'] > lower_limit)]"],"metadata":{"id":"GZ282qYlYimR","executionInfo":{"status":"ok","timestamp":1692894788841,"user_tz":420,"elapsed":647,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["new_df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BGTtqLkDYl4C","executionInfo":{"status":"ok","timestamp":1692894790248,"user_tz":420,"elapsed":4,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"35fcf6cc-3ebe-4f5c-eb63-09980c5ac766"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(8056, 5)"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["X = df.drop('selling_price', axis=1)\n","y = df['selling_price']"],"metadata":{"id":"yk-sCLviYnm5","executionInfo":{"status":"ok","timestamp":1692894792637,"user_tz":420,"elapsed":720,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_scaled = sc.fit_transform(X)"],"metadata":{"id":"Xbodit1VYpvp","executionInfo":{"status":"ok","timestamp":1692894794866,"user_tz":420,"elapsed":3,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(\n","    X, y, test_size=0.3, random_state=1)\n","X_train.shape, X_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WqyRl7z-YrZp","executionInfo":{"status":"ok","timestamp":1692894797178,"user_tz":420,"elapsed":3,"user":{"displayName":"MEHEDI HASAN 201-15-3176","userId":"14493564234815751141"}},"outputId":"f21d9d04-a48e-43c8-ef77-302fa8d21ee7"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((5689, 4), (2439, 4))"]},"metadata":{},"execution_count":26}]}]}